/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.lock.v1;

import "atomix/runtime/v1/descriptor.proto";
import "atomix/runtime/v1/headers.proto";
import "gogoproto/gogo.proto";

option java_package = "io.atomix.runtime.lock";
option java_multiple_files = true;

// LockManager is a manager for a Lock primitive
service LockManager {
    option (atomix.runtime.v1.name) = "Lock";
    option (atomix.runtime.v1.component) = MANAGER;

    rpc Create (CreateRequest) returns (CreateResponse) {
        option (atomix.runtime.v1.operation_id) = 1;
        option (atomix.runtime.v1.operation_type) = CREATE;
    }

    rpc Close (CloseRequest) returns (CloseResponse) {
        option (atomix.runtime.v1.operation_id) = 2;
        option (atomix.runtime.v1.operation_type) = CLOSE;
    }
}

message CreateRequest {
    atomix.runtime.v1.ClusterRequestHeaders headers = 1 [
        (atomix.runtime.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
    string name = 2;
}

message CreateResponse {
    atomix.runtime.v1.ClusterResponseHeaders headers = 1 [
        (atomix.runtime.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
}

message CloseRequest {
    atomix.runtime.v1.ClusterRequestHeaders headers = 1 [
        (atomix.runtime.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
    string name = 2;
}

message CloseResponse {
    atomix.runtime.v1.ClusterResponseHeaders headers = 1 [
        (atomix.runtime.v1.headers) = true,
        (gogoproto.nullable) = false
    ];
}
