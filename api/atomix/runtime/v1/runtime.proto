/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.runtime.v1;

import "gogoproto/gogo.proto";

option java_package = "io.atomix.runtime";
option java_multiple_files = true;

// The runtime service provides control functions for the runtime proxy.
service Runtime {
    rpc GetRuntimeInfo (GetRuntimeInfoRequest) returns (GetRuntimeInfoResponse);

    rpc ConnectCluster (ConnectClusterRequest) returns (ConnectClusterResponse);
    rpc ConfigureCluster (ConfigureClusterRequest) returns (ConfigureClusterResponse);
    rpc DisconnectCluster (DisconnectClusterRequest) returns (DisconnectClusterResponse);

    rpc InstallDriver (stream InstallDriverRequest) returns (InstallDriverResponse);
}

message RuntimeInfo {
    string version = 1;
}

message GetRuntimeInfoRequest {

}

message GetRuntimeInfoResponse {
    RuntimeInfo runtime_info = 1 [
        (gogoproto.nullable) = false
    ];
}

message ConnectionInfo {
    DriverInfo driver = 1 [
        (gogoproto.nullable) = false
    ];
    bytes config = 2;
}

message ConnectClusterRequest {
    string cluster = 1;
    ConnectionInfo connection = 2;
}

message ConnectClusterResponse {

}

message ConfigureClusterRequest {
    string cluster = 1;
    ConnectionInfo connection = 2;
}

message ConfigureClusterResponse {

}

message DisconnectClusterRequest {
    string cluster = 1;
}

message DisconnectClusterResponse {

}

message InstallDriverRequest {
    oneof driver {
        DriverHeader header = 1;
        DriverChunk chunk = 2;
        DriverTrailer trailer = 3;
    }
}

message InstallDriverResponse {

}

message DriverHeader {
    DriverInfo driver = 1 [
        (gogoproto.nullable) = false
    ];
}

message DriverChunk {
    bytes data = 1;
}

message DriverTrailer {
    string checksum = 1;
}

message DriverInfo {
    string name = 1;
    string version = 2;
}
